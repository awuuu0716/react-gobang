{"version":3,"sources":["style/constants.js","style/style.js","image/board.webp","Title.js","History.js","ChessPlaybook.js","utils/utils.js","App.js","index.js"],"names":["WHITE_CHESS","BLACK_CHESS","CHESS_SHADOW","BoardImg","styled","img","BoardContainer","div","Square","props","$coordY","$coordX","$color","TitleWrapper","OptionBtn","button","Player","span","$player","DashBoard","$right","DashBoardTitle","h1","Title","winner","player","restart","onClick","History","history","returnBtn","map","historyData","index","ChessPlaybook","playbook","playbookData","initBoard","boardArray","i","tempArr","coordY","Math","floor","j","id","String","fromCharCode","coordX","push","coord","isClicked","chess","App","useState","board","setBoard","setPlayer","lastPlace","setLastPlace","setWinner","pastBoard","pastPlayer","pastLastPlace","pastWinner","setHistory","useEffect","handleMatchResult","length","lastColor","result","horizontal","vertical","slash","backSlash","line","forEach","diretion","dx","dy","nowX","nowY","nextX","nextY","lastChess","nextChess","src","boardImg","draggable","slice","historyIndex","row","square","newPlaybook","oldPlaybook","nextBoard","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.97aa7711.chunk.js","sourcesContent":["export const WHITE_CHESS =\n  'radial-gradient(circle at 41% 30%, #fff 0%,#f5f5f5 22%,#b5b5b5 58%,#4a4a4a 96%,#666 101%,#999 100%)';\n\nexport const BLACK_CHESS =\n  'radial-gradient(circle at 41% 30%,#5a5a5a 0%,#444444 22%,#1d1d1d 58%,#272727 96%,#404040 101%,#5d5d5d 100%)';\n\nexport const CHESS_SHADOW = '1px 2px 3px #909090';\n","import styled from 'styled-components';\nimport { WHITE_CHESS, BLACK_CHESS, CHESS_SHADOW } from './constants';\n\nexport const BoardImg = styled.img`\n  display: block;\n  width: 860px;\n`;\n\nexport const BoardContainer = styled.div`\n  position: relative;\n  display: block;\n  width: 1000px;\n  margin: 0 400px;\n`;\n\nexport const Square = styled.div`\n  position: absolute;\n  top: ${(props) => props.$coordY}px;\n  left: ${(props) => props.$coordX}px;\n  width: 26px;\n  height: 26px;\n  border-radius: 50%;\n  cursor: pointer;\n  background: ${(props) => {\n    if (props.$color === 'none') return 'transparent';\n    return props.$color === 'black' ? BLACK_CHESS : WHITE_CHESS;\n  }};\n  box-shadow: ${(props) => (props.$color === 'none' ? 'none' : CHESS_SHADOW)};\n`;\n\nexport const TitleWrapper = styled.div`\n  position: absolute;\n  top: 10px;\n  left: 35%;\n  color: #232323;\n  font-size: 32px;\n  font-weight: bold;\n  user-select: none;\n`;\n\nexport const OptionBtn = styled.button`\n  border: none;\n  background: transparent;\n  box-shadow: 1px 1px 3px #b19556;\n  font-size: 20px;\n  font-weight: bold;\n  padding: 5px 10px;\n  display: inline-block;\n  color: #232323;\n  cursor: pointer;\n  outline: none;\n  transform: translate(236px, 0px);\n  transition: color 0.1s ease-in-out;\n  &:hover {\n    color: red;\n  }\n`;\n\nexport const Player = styled.span`\n  display: inline-block;\n  width: 26px;\n  height: 26px;\n  border-radius: 50%;\n  background: ${(props) =>\n    props.$player === 'black' ? BLACK_CHESS : WHITE_CHESS};\n  box-shadow: ${CHESS_SHADOW};\n  transform: translate(10px, 4px);\n`;\n\nexport const DashBoard = styled.div`\n  position: absolute;\n  display: flex;\n  padding-bottom: 10px;\n  flex-direction: column;\n  align-items: center;\n  top: 0px;\n  right: ${(props) => props.$right};\n  width: 250px;\n  max-height: 60vh;\n  overflow: auto;\n  color: #232323;\n  border: 1px solid #232323;\n`;\n\nexport const DashBoardTitle = styled.h1``;\n","export default __webpack_public_path__ + \"static/media/board.697c9194.webp\";","import { Player, TitleWrapper, OptionBtn } from './style/style';\n\nconst Title = ({ winner, player, restart }) => (\n  <TitleWrapper>\n    {winner ? 'Winner: ' : 'Player: '}\n    <Player $player={winner || player} />\n    <OptionBtn onClick={restart}>Restart</OptionBtn>\n  </TitleWrapper>\n);\n\nexport default Title;\n","import { DashBoard, DashBoardTitle } from './style/style';\n\nconst History = ({ history, returnBtn }) => (\n  <DashBoard $right=\"-150px\">\n    <DashBoardTitle>Match History</DashBoardTitle>\n    {history.map((historyData, index) => {\n      return (\n        <div key={index}>\n          Step: {index + 1}\n          <button onClick={returnBtn(index + 1)}>Go Back</button>\n        </div>\n      );\n    })}\n  </DashBoard>\n);\n\nexport default History;\n","import { DashBoard, DashBoardTitle } from './style/style';\n\nconst ChessPlaybook = ({ playbook }) => (\n  <DashBoard $right=\"-440px\">\n    <DashBoardTitle>Chess Playbook</DashBoardTitle>\n    {playbook.map((playbookData, index) => {\n      return (\n        <div key={index}>\n          {index + 1}: {playbookData}\n        </div>\n      );\n    })}\n  </DashBoard>\n);\n\nexport default ChessPlaybook;\n","export const initBoard = () => {\n  const boardArray = [];\n  const blockWidth = 39.3;\n  const blockHeight = 41.5;\n  const [startX, startY] = [80, 89];\n  // 因應畫面上棋盤式從 1 開始算位置, 此處 i 與 j 從 1 開始算\n  for (let i = 1; i < 20; i += 1) {\n    const tempArr = [];\n    const coordY = Math.floor(startY + (i - 1) * blockHeight);\n    for (let j = 1; j < 20; j += 1) {\n      const id = String.fromCharCode(65 + (i - 1)) + j;\n      const coordX = Math.floor(startX + (j - 1) * blockWidth);\n      tempArr.push({\n        coord: [coordX, coordY],\n        id,\n        isClicked: false,\n        chess: 'none',\n        index: [i - 1, j - 1],\n      });\n    }\n    boardArray.push(tempArr);\n  }\n  return boardArray;\n};\n\nexport const initHistory = () => [\n  {\n    pastBoard: [],\n    pastPlayer: '',\n    pastLastPlace: [],\n    pastWinner: '',\n    playbook: [],\n  },\n];\n","import { BoardImg, Square, BoardContainer } from './style/style';\nimport boardImg from './image/board.webp';\nimport { useState, useEffect } from 'react';\nimport Title from './Title';\nimport History from './History';\nimport ChessPlaybook from './ChessPlaybook';\nimport { initBoard, initHistory } from './utils/utils';\n\nconst App = () => {\n  const [board, setBoard] = useState(initBoard());\n  const [player, setPlayer] = useState('black');\n  const [lastPlace, setLastPlace] = useState([]);\n  const [winner, setWinner] = useState('');\n  const [history, setHistory] = useState(initHistory());\n\n  useEffect(() => {\n    handleMatchResult();\n  });\n\n  const handleMatchResult = () => {\n    if (lastPlace.length === 0) return;\n    const lastColor = board[lastPlace[0]][lastPlace[1]].chess\n    const diretions = [\n      { index: [1, 0], line: 'horizontal' },\n      { index: [1, -1], line: 'slash' },\n      { index: [0, -1], line: 'vertical' },\n      { index: [-1, -1], line: 'backSlash' },\n      { index: [-1, 0], line: 'horizontal' },\n      { index: [-1, 1], line: 'slash' },\n      { index: [0, 1], line: 'vertical' },\n      { index: [1, 1], line: 'backSlash' },\n    ];\n    const result = { horizontal: 1, vertical: 1, slash: 1, backSlash: 1 };\n    diretions.forEach((diretion) => {\n      const [dx, dy] = diretion.index;\n      const line = diretion.line;\n      let [nowX, nowY] = lastPlace;\n      let [nextX, nextY] = [nowX + dx, nowY + dy];\n      if (nextX < 0 || nextX > 18 || nextY < 0 || nextY > 18) return;\n\n      let lastChess = board[nowX][nowY].chess;\n      let nextChess = board[nextX][nextY].chess;\n\n      while (nextChess === lastChess) {\n        result[line] += 1;\n        nowX = nextX;\n        nowY = nextY;\n        nextX = nowX + dx;\n        nextY = nowY + dy;\n        if (nextX < 0 || nextX > 18 || nextY < 0 || nextY > 18) break;\n        lastChess = board[nowX][nowY].chess;\n        nextChess = board[nextX][nextY].chess;\n      }\n    });\n    for (const line in result) {\n      if (result[line] === 5) {\n        setWinner(lastColor);\n      }\n    }\n  };\n\n  const handlePlaceChess = (id) => () => {\n    const oldPlaybook = history[history.length - 1].playbook;\n    let newPlaybook;\n    const nextBoard = board.map((row) =>\n      row.map((square) => {\n        if (square.id !== id) return square;\n        newPlaybook = `${String.fromCharCode(65 + square.index[0])}${\n          square.index[1] + 1\n        } ${player}`;\n        setLastPlace(square.index);\n        return {\n          ...square,\n          isClicked: true,\n          chess: player,\n        };\n      })\n    );\n    setHistory([\n      ...history,\n      {\n        pastBoard: board,\n        pastPlayer: player,\n        pastLastPlace: lastPlace,\n        pastWinner: winner,\n        playbook: [...oldPlaybook, newPlaybook],\n      },\n    ]);\n    setBoard(nextBoard);\n    setPlayer(player === 'black' ? 'white' : 'black');\n  };\n\n  const handleRestartMatch = () => {\n    setBoard(initBoard());\n    setPlayer('black');\n    setLastPlace([]);\n    setWinner('');\n    setHistory(initHistory());\n  };\n\n  const handleReturnToThePast = (historyIndex) => () => {\n    const { pastBoard, pastPlayer, pastLastPlace, pastWinner } = history[\n      historyIndex\n    ];\n    setHistory(history.slice(0, historyIndex));\n    setBoard(pastBoard);\n    setPlayer(pastPlayer);\n    setWinner(pastWinner);\n    setLastPlace(pastLastPlace);\n  };\n\n  return (\n    <>\n      <BoardContainer>\n        <BoardImg src={boardImg} draggable={false} />\n        <History history={history.slice(1)} returnBtn={handleReturnToThePast} />\n        <ChessPlaybook playbook={history[history.length - 1].playbook} />\n        <Title winner={winner} player={player} restart={handleRestartMatch} />\n        {board.map((row) =>\n          row.map((square) => (\n            <Square\n              $coordX={square.coord[0]}\n              $coordY={square.coord[1]}\n              key={square.id}\n              $color={square.chess}\n              onClick={\n                square.isClicked || winner ? null : handlePlaceChess(square.id)\n              }\n            />\n          ))\n        )}\n      </BoardContainer>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}